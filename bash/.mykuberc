# vi: ft=sh

# Generic kubernetes stuff
alias k='kubectl'
# Autocompletion for this alias
source /usr/share/bash-completion/completions/kubectl
if [[ $(type -t compopt) == "builtin" ]]; then
	complete -o default -F __start_kubectl k
else
	complete -o default -o nospace -F __start_kubectl k
fi

# Helm stuff
HELM_TLS_VERIFY=1

alias ki='kube-prompt'
alias kui="kubectl proxy"
alias kctxl="kubectl config get-contexts"
alias kdump="k8s-dump --apiserver-host=http://127.0.0.1:8001 --output=$HOME"

kctx() {
	local OPTIONS=$(kubectl config get-contexts -o name)
	OPTIONS+=' EXIT'

	local CTX=$(kubectl config current-context)
	local NS=$(kubectl config view -o jsonpath="{.contexts[?(@.name=='$CTX')].context.namespace}")
	if [[ -z $NS ]]; then
		NS="default"
	fi

	echo "Current ctx/ns: $CTX/$NS"
	echo "Switch to which context? (or EXIT)"

	select opt in $OPTIONS; do
		if [ "$opt" = "EXIT" ]; then
			echo "Staying in the current context"
		else
			kubectl config use-context "$opt"
		fi
		break
	done
	CTX=$(kubectl config current-context)
	NS=$(kubectl config view -o jsonpath="{.contexts[?(@.name=='$CTX')].context.namespace}")
	if [[ -z $NS ]]; then
		NS="default"
	fi
	echo "Current ctx/ns: $CTX/$NS"
}

kns() {
	local OPTIONS=$(kubectl get namespaces -o jsonpath='{range .items[*].metadata.name}{@}{"\n"}{end}')
	OPTIONS+=' EXIT'

	local CTX=$(kubectl config current-context)
	local NS=$(kubectl config view -o jsonpath="{.contexts[?(@.name=='$CTX')].context.namespace}")
	if [[ -z $NS ]]; then
		NS="default"
	fi

	echo "Current ctx/ns: $CTX/$NS"
	echo "Switch to which namespace? (or EXIT)"

	select opt in $OPTIONS; do
		if [ "$opt" = "EXIT" ]; then
			echo "Staying in the current namespace"
		else
			kubectl config set-context "$CTX" --namespace "$opt"
		fi
		break
	done
	NS=$(kubectl config view -o jsonpath="{.contexts[?(@.name=='$CTX')].context.namespace}")
	if [[ -z $NS ]]; then
		NS="default"
	fi
	echo "Current ctx/ns: $CTX/$NS"
}

# Generic gcloud stuff
alias gcl='gcloud alpha interactive --context="gcloud "'
alias gcls="gcloud container clusters list"
alias glog="gcloud auth login --format='flattened' | grep -o '^access_token:.*' | tr -s ' ' | cut -d' ' -f2 | pbcopy"
alias gtok="cat ~/.kube/config | grep -o 'access-token:.*' | cut -d' ' -f2 | pbcopy"
alias gcca="gcloud config configurations activate "
